package com.gabrielsousa.hrpayroll.resources;

import java.io.IOException;
import java.net.URISyntaxException;
import java.nio.file.Files;
import java.nio.file.Paths;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.gabrielsousa.hrpayroll.entities.Payment;
import com.gabrielsousa.hrpayroll.services.PaymentService;

import io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker;

@RestController
@RequestMapping(value = "/payments")
@CircuitBreaker(name = "paymentController", fallbackMethod = "getDefaultPaymentList")
public class PaymentController {

	@Autowired
	private PaymentService paymentService;

	@GetMapping("/{id}/days/{days}")
	public ResponseEntity<Payment> getPayment(@PathVariable Long id, @PathVariable Integer days) {
		Payment payment = paymentService.getPayment(id, days);
		return ResponseEntity.ok(payment);
	}

	public ResponseEntity<String> getDefaultPaymentList(Exception ex) throws URISyntaxException, IOException {
		return new ResponseEntity<>(
				new String(Files.readAllBytes(
						Paths.get(getClass().getClassLoader().getResource("fallback-album-list.json").toURI()))),
				HttpStatus.OK);
	}
}
